-- MySQL Script generated by MySQL Workbench
-- Thu Sep 15 00:51:53 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `atores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `atores` ;

CREATE TABLE IF NOT EXISTS `atores` (
  `atores_id` CHAR NOT NULL,
  `atores_fname` VARCHAR(25) NULL,
  `atores_lname` VARCHAR(35) NULL,
  `genero` CHAR(1) NULL,
  PRIMARY KEY (`atores_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `atores_id_UNIQUE` ON `atores` (`atores_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `atores_filmes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `atores_filmes` ;

CREATE TABLE IF NOT EXISTS `atores_filmes` (
  `filme_id` CHAR NOT NULL,
  `atores_id` CHAR NULL,
  PRIMARY KEY (`filme_id`),
  CONSTRAINT `fk_atores_filmes_atores1`
    FOREIGN KEY (`atores_id`)
    REFERENCES `atores` (`atores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_atores_filmes_filmes1`
    FOREIGN KEY (`filme_id`)
    REFERENCES `filmes` (`filme_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_atores_filmes_atores1_idx` ON `atores_filmes` (`atores_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `filme_id_UNIQUE` ON `atores_filmes` (`filme_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `atores_id_UNIQUE` ON `atores_filmes` (`atores_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `atores_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `atores_series` ;

CREATE TABLE IF NOT EXISTS `atores_series` (
  `serie_id` CHAR NOT NULL,
  `atores_id` CHAR NULL,
  PRIMARY KEY (`serie_id`),
  CONSTRAINT `fk_atores_series_atores1`
    FOREIGN KEY (`atores_id`)
    REFERENCES `atores` (`atores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_atores_series_series1`
    FOREIGN KEY (`serie_id`)
    REFERENCES `series` (`serie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_atores_series_atores1_idx` ON `atores_series` (`atores_id` ASC) VISIBLE;

CREATE INDEX `fk_atores_series_series1_idx` ON `atores_series` (`serie_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `avaliacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `avaliacao` ;

CREATE TABLE IF NOT EXISTS `avaliacao` (
  `filme_id` CHAR NOT NULL,
  `serie_id` CHAR NULL,
  `username` VARCHAR(40) NOT NULL,
  `avaliacao` VARCHAR(45) NULL,
  PRIMARY KEY (`filme_id`),
  CONSTRAINT `fk_avaliacao_usuario1`
    FOREIGN KEY (`username`)
    REFERENCES `usuario` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_avaliacao_filmes1`
    FOREIGN KEY (`filme_id`)
    REFERENCES `filmes` (`filme_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_avaliacao_series1`
    FOREIGN KEY (`serie_id`)
    REFERENCES `series` (`serie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_avaliacao_usuario1_idx` ON `avaliacao` (`username` ASC) VISIBLE;

CREATE INDEX `fk_avaliacao_series1_idx` ON `avaliacao` (`serie_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `diretores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `diretores` ;

CREATE TABLE IF NOT EXISTS `diretores` (
  `id_diretores` CHAR NOT NULL,
  `primeiro_nome` VARCHAR(45) NOT NULL,
  `sobrenome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_diretores`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_diretores_UNIQUE` ON `diretores` (`id_diretores` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `filmes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `filmes` ;

CREATE TABLE IF NOT EXISTS `filmes` (
  `filme_id` CHAR NOT NULL,
  `titulo` VARCHAR(45) NOT NULL,
  `avaliacao_filmes` INT NULL,
  `classificacao_filmes` INT NULL,
  `streaming_platform` VARCHAR(45) NULL,
  `assistiu` TINYINT NULL,
  `streaming_platform_streaming_id` CHAR NOT NULL,
  PRIMARY KEY (`filme_id`),
  CONSTRAINT `fk_filmes_usuario1`
    FOREIGN KEY (`filme_id`)
    REFERENCES `usuario` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `filme_id_UNIQUE` ON `filmes` (`filme_id` ASC) VISIBLE;

CREATE INDEX `fk_filmes_usuario1_idx` ON `filmes` (`filme_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `filmes_diretores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `filmes_diretores` ;

CREATE TABLE IF NOT EXISTS `filmes_diretores` (
  `id_diretores` CHAR NOT NULL,
  `filme_id` CHAR NULL,
  PRIMARY KEY (`id_diretores`),
  CONSTRAINT `fk_filmes_diretores_diretores1`
    FOREIGN KEY (`id_diretores`)
    REFERENCES `diretores` (`id_diretores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_diretores_filmes1`
    FOREIGN KEY (`filme_id`)
    REFERENCES `filmes` (`filme_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_filmes_diretores_filmes1_idx` ON `filmes_diretores` (`filme_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `id_diretores_UNIQUE` ON `filmes_diretores` (`id_diretores` ASC) VISIBLE;

CREATE UNIQUE INDEX `filme_id_UNIQUE` ON `filmes_diretores` (`filme_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `genero_filmes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genero_filmes` ;

CREATE TABLE IF NOT EXISTS `genero_filmes` (
  `filme_id` CHAR NOT NULL,
  `genero_id` CHAR NULL,
  PRIMARY KEY (`filme_id`),
  CONSTRAINT `fk_genero_filmes_filmes`
    FOREIGN KEY (`filme_id`)
    REFERENCES `filmes` (`filme_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_genero_filmes_generos2`
    FOREIGN KEY (`genero_id`)
    REFERENCES `generos` (`genero_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_genero_filmes_generos2_idx` ON `genero_filmes` (`genero_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `filme_id_UNIQUE` ON `genero_filmes` (`filme_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `genero_id_UNIQUE` ON `genero_filmes` (`genero_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `generos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `generos` ;

CREATE TABLE IF NOT EXISTS `generos` (
  `genero_id` CHAR NOT NULL,
  `genero_nome` VARCHAR(45) NULL,
  `subgenero_nome` VARCHAR(45) NULL,
  PRIMARY KEY (`genero_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `genero_id_UNIQUE` ON `generos` (`genero_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `generos_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `generos_series` ;

CREATE TABLE IF NOT EXISTS `generos_series` (
  `serie_id` CHAR NOT NULL,
  `genero_id` CHAR NULL,
  PRIMARY KEY (`serie_id`),
  CONSTRAINT `fk_generos_series_generos1`
    FOREIGN KEY (`genero_id`)
    REFERENCES `generos` (`genero_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_generos_series_series1`
    FOREIGN KEY (`serie_id`)
    REFERENCES `series` (`serie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_generos_series_generos1_idx` ON `generos_series` (`genero_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `has_streaming_platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `has_streaming_platform` ;

CREATE TABLE IF NOT EXISTS `has_streaming_platform` (
  `filmes_filme_id` CHAR NOT NULL,
  `streaming_platform_streaming_id` CHAR NOT NULL,
  `serie_id` CHAR NOT NULL,
  PRIMARY KEY (`filmes_filme_id`, `streaming_platform_streaming_id`),
  CONSTRAINT `fk_filmes_has_streaming_platform_filmes1`
    FOREIGN KEY (`filmes_filme_id`)
    REFERENCES `filmes` (`filme_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_streaming_platform_streaming_platform1`
    FOREIGN KEY (`streaming_platform_streaming_id`)
    REFERENCES `streaming_platform` (`streaming_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_has_streaming_platform_series1`
    FOREIGN KEY (`serie_id`)
    REFERENCES `series` (`serie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_filmes_has_streaming_platform_streaming_platform1_idx` ON `has_streaming_platform` (`streaming_platform_streaming_id` ASC) VISIBLE;

CREATE INDEX `fk_filmes_has_streaming_platform_filmes1_idx` ON `has_streaming_platform` (`filmes_filme_id` ASC) VISIBLE;

CREATE INDEX `fk_has_streaming_platform_series1_idx` ON `has_streaming_platform` (`serie_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `series` ;

CREATE TABLE IF NOT EXISTS `series` (
  `serie_id` CHAR NOT NULL,
  `titulo` VARCHAR(45) NOT NULL,
  `classificacao_series` VARCHAR(45) NULL,
  `streaming_platform` VARCHAR(45) NULL,
  PRIMARY KEY (`serie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `series_diretores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `series_diretores` ;

CREATE TABLE IF NOT EXISTS `series_diretores` (
  `id_diretores` CHAR NOT NULL,
  `serie_id` CHAR NULL,
  PRIMARY KEY (`id_diretores`),
  CONSTRAINT `fk_series_diretores_diretores1`
    FOREIGN KEY (`id_diretores`)
    REFERENCES `diretores` (`id_diretores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_diretores_series1`
    FOREIGN KEY (`serie_id`)
    REFERENCES `series` (`serie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_series_diretores_series1_idx` ON `series_diretores` (`serie_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `streaming_platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `streaming_platform` ;

CREATE TABLE IF NOT EXISTS `streaming_platform` (
  `streaming_id` CHAR NOT NULL,
  `netflix` TINYINT NULL,
  `primevideo` TINYINT NULL,
  `globoplay` TINYINT NULL,
  `disney` TINYINT NULL,
  `starplus` TINYINT NULL,
  `hbomax` TINYINT NULL,
  `paramount` TINYINT NULL,
  PRIMARY KEY (`streaming_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usuario` ;

CREATE TABLE IF NOT EXISTS `usuario` (
  `username` CHAR(20) NOT NULL,
  `primeiro_nome` VARCHAR(45) NOT NULL,
  `sobrenome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `sexo` CHAR(1) NULL,
  `idade` INT NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `usuario` (`username` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `usuario_has_streaming_platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usuario_has_streaming_platform` ;

CREATE TABLE IF NOT EXISTS `usuario_has_streaming_platform` (
  `usuario_username` CHAR(20) NOT NULL,
  `streaming_platform_streaming_id` CHAR NOT NULL,
  PRIMARY KEY (`usuario_username`, `streaming_platform_streaming_id`),
  CONSTRAINT `fk_usuario_has_streaming_platform_usuario1`
    FOREIGN KEY (`usuario_username`)
    REFERENCES `usuario` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_streaming_platform_streaming_platform1`
    FOREIGN KEY (`streaming_platform_streaming_id`)
    REFERENCES `streaming_platform` (`streaming_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_usuario_has_streaming_platform_streaming_platform1_idx` ON `usuario_has_streaming_platform` (`streaming_platform_streaming_id` ASC) VISIBLE;

CREATE INDEX `fk_usuario_has_streaming_platform_usuario1_idx` ON `usuario_has_streaming_platform` (`usuario_username` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
